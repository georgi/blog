<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"> 
  <channel>
    <title>Matthias Georgi</title>
    <link>http://www.matthias-georgi.de</link>
    <description>A blog</description>
    <language>en</language>
    <copyright>Matthias Georgi</copyright>
    <pubDate></pubDate>
    <item>
  <title>vTouch - Control Ableton Live in a Webbrowser</title>
  <description><![CDATA[ VTouch is a multitouch browser frontend for Ableton Live. Inside yourwebbrowser you can control clip triggering, volume, send and returnlevels, mute, solo, record states. This works also on the network, soyou can connect your mobile phone, iPads or android tablets easily byjust browsing to you local webserver. ]]></description>
  <link>http://www.matthias-georgi.de/2011/6/vtouch-control-ableton-live-in-a-webbrowser.html</link>
  <pubDate>01 Jun 11 00:00</pubDate>
</item><item>
  <title>Quick Guide for Passenger on Natty Narwhal</title>
  <description><![CDATA[ This is a short guide for installing [Phusion Passenger][1] and [RubyEnterprise Editition][2] on Ubuntu Natty Narwhal. Depending on your machinethis will take 30-60 minutes on a fresh Ubuntu install. ]]></description>
  <link>http://www.matthias-georgi.de/2011/6/quick-guide-for-passenger-on-natty-narwhal.html</link>
  <pubDate>01 Jun 11 00:00</pubDate>
</item><item>
  <title>Emacs Dark Theme</title>
  <description><![CDATA[ Recently I updated my Emacs setup and decided to go for a more minimalcolor theme. Especially on long coding nights you want a theme withoutdistracting colors. ]]></description>
  <link>http://www.matthias-georgi.de/2011/6/emacs-dark-theme.html</link>
  <pubDate>01 Jun 11 00:00</pubDate>
</item><item>
  <title>RackDAV - Web Authoring for Rack</title>
  <description><![CDATA[ RackDAV is Handler for [Rack][1], which allows content authoring overHTTP. RackDAV brings its own file backend, but other backends arepossible by subclassing RackDAV::Resource. ]]></description>
  <link>http://www.matthias-georgi.de/2009/4/rackdav-web-authoring-for-rack.html</link>
  <pubDate>01 Apr 09 00:00</pubDate>
</item><item>
  <title>Using Javascript Templates for a Delicious Sidebar</title>
  <description><![CDATA[ Processing JSON data from an external source with Javascript templatesis a natural fit. Create a template inside your *HTML Document* byadding class names and variables and write a few lines for fetchingthe *JSON*, that's all. This tutorial is an example for my JavascriptTemplate Engine called **[Patroon][1]**. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/using-javascript-templates-for-a-delicious-sidebar.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Shinmun, a small and beautiful blog engine</title>
  <description><![CDATA[ Shinmun is a minimalist blog engine. You just write posts as text files,render them to static files and push your blog to your server. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/shinmun-a-small-and-beautiful-blog-engine.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Relax NG Schema for Adobe Flex 3</title>
  <description><![CDATA[ In the past Flex development on Emacs was not as it should be becauseof a missing Relax NG Schema, which is needed for nxml-mode to workproperly. To improve the situation I developed a MXML Schema generatorbased on the [XSD generator][1] of [Ali Mansuroglu][2]. Now Emacsknows your Schema and can help you typing and validating MXML files. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/relax-ng-schema-for-adobe-flex-3.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Quick Guide for Passenger on Ubuntu Hardy</title>
  <description><![CDATA[ This is a short guide for installing [Phusion Passenger][1] on UbuntuHardy. This includes the installation of Ruby 1.8.6, Apache 2.2.8, MySQL 5.0.51a, Git 1.5.4 and Rails 2.1.1. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/quick-guide-for-passenger-on-ubuntu-hardy.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Patroon - a Javascript Template Engine</title>
  <description><![CDATA[ Patroon is a template engine written in Javascript in about 100 linesof code. It takes existing DOM nodes annotated with CSS classes andexpand a data object according to simple rules. Additionally you mayuse traditional string interpolation inside attribute values and textnodes. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/patroon-a-javascript-template-engine.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Patroon - a Javascript Template Engine (Part 2)</title>
  <description><![CDATA[ This post is an update to my [initial post][3]. Patroon has beenimproved and is now easier to use and uses a better algorithminternally. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/patroon-a-javascript-template-engine-part-2.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Emacs Completions with Hippie-Expand and Snippets</title>
  <description><![CDATA[ One of the most important features of a text editor is the completingof text inside a buffer. There a lots of packages for Emacs, whichprovide this feature in many different ways. I will show you, what Iuse to improve my life as coder. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/emacs-completions.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Commenting system with lightweight JSON store</title>
  <description><![CDATA[ As I wrote this [blog engine][1], the need for a commenting systemarose and I reflected about a small and simple commenting system withjust a flat file JSON store. This is my solution, which can be used onany static page on a server with PHP support. ]]></description>
  <link>http://www.matthias-georgi.de/2008/9/commenting-system-with-lightweight-json-store.html</link>
  <pubDate>01 Sep 08 00:00</pubDate>
</item><item>
  <title>Viewing RI in a web browser</title>
  <description><![CDATA[ I'm a big fan of the Firefox keyword search. For example I havekeywords for [LEO][1], [Wikipedia][2] and [Man pages][3]. Sometimes Iwant to look up API documentation in Ruby and typing `ri camelize`into the address bar and viewing the documentation as web page seemsto be quite natural for me. So I wrote a quick and dirty cgi, whichcalls RI and outputs HTML. ]]></description>
  <link>http://www.matthias-georgi.de/2008/12/viewing-ri-in-a-web-browser.html</link>
  <pubDate>01 Dec 08 00:00</pubDate>
</item><item>
  <title>Kontrol - a micro framework</title>
  <description><![CDATA[ Kontrol is a small web framework written in Ruby, which runs directlyon [Rack][5]. It provides a simple pattern matching algorithm for routingand uses GitStore as data storage. ]]></description>
  <link>http://www.matthias-georgi.de/2008/12/kontrol-a-micro-framework.html</link>
  <pubDate>01 Dec 08 00:00</pubDate>
</item><item>
  <title>Git Store - using Git as versioned data store in Ruby</title>
  <description><![CDATA[ GitStore is a small Ruby library, providing an easy interface to theversion control system [Git][1]. It aims to use Git as a versioneddata store much like the well known PStore. Basically GitStore checksout the repository into a in-memory representation, which can bemodified and finally committed. In this way your data is stored in afolder structure and can be checked out and examined, but theapplication may access the data in a convenient hash-like way. Thislibrary is based on [Grit][2], the main technology behind [GitHub][3]. ]]></description>
  <link>http://www.matthias-georgi.de/2008/12/git-store-using-git-as-versioned-data-store-in-ruby.html</link>
  <pubDate>01 Dec 08 00:00</pubDate>
</item><item>
  <title>Google-like Search Results Helper</title>
  <description><![CDATA[ Representing your search results in a user-friendly way is a commontask among web developers. Google's approach is dead simple but reallyeffective. The matching text is highlighted and shown with itscontext. This can be implemented in less than 20 lines of code whichyou can include into you helper: ]]></description>
  <link>http://www.matthias-georgi.de/2007/5/google-like-search-results-helper.html</link>
  <pubDate>01 May 07 00:00</pubDate>
</item><item>
  <title>Rendering markaby in your helpers</title>
  <description><![CDATA[ Generating markup in your rails helpers is a general practice in railsand is used throughout all rails helpers. Normally you use `content_tag`to generate markup. But often you will encounter situations, wherenested tags force you to write ugly helper code like the followinghelper method from the rails library: ]]></description>
  <link>http://www.matthias-georgi.de/2007/4/rendering-markaby-in-your-helpers.html</link>
  <pubDate>01 Apr 07 00:00</pubDate>
</item><item>
  <title>Pretty RESTful URLs in Rails</title>
  <description><![CDATA[ Since Release 1.2 Rails knows to generate _RESTful_ routes. Eachresource is identified by an _URI_, which looks like `/users/123` . Itwould be nice to have more readable URLs, which include the name ofthe user: `/users/matthias-georgi`. This is a short tutorial on makingyour urls pretty while retaining the REST approach. ]]></description>
  <link>http://www.matthias-georgi.de/2007/4/pretty-restful-urls-in-rails.html</link>
  <pubDate>01 Apr 07 00:00</pubDate>
</item><item>
  <title>Fast Auto-completion with Rails, Scriptaculous and JSON</title>
  <description><![CDATA[ Inspired by the excellent [Rails Recipes][1] book , I created animproved Auto-completion helper, which uses _JSON_ and _AJAX_ insteadof a script tag for loading the completions. What we want to achieveis a search field, which pops up immediately, showing us a list ofpossible completions for our search word. Look at [Google Suggest][2]to get an idea. ]]></description>
  <link>http://www.matthias-georgi.de/2007/4/fast-autocompletion-with-rails.html</link>
  <pubDate>01 Apr 07 00:00</pubDate>
</item><item>
  <title>DRY Up Your Url Helpers</title>
  <description><![CDATA[ This tutorial shows you how to simplify url generation in combinationwith _RESTful_ resources by extending the `url_for` helper. This approachwill also work with nested routes and other helpers like `form_tag` and`link_to`. ]]></description>
  <link>http://www.matthias-georgi.de/2007/4/dry-up-your-url-helpers.html</link>
  <pubDate>01 Apr 07 00:00</pubDate>
</item><item>
  <title>Building a del.ico.us and flickr sidebar in 5 minutes</title>
  <description><![CDATA[ You need a del.icio.us sidebar which shows recent bookmarks or one ofthese nice flickr badges? This is really is easy as the [Typo WeblogEngine][1] already includes an flickr and del.icio.us aggregator. ]]></description>
  <link>http://www.matthias-georgi.de/2007/4/building-delicous-and-flickr-sidebar-in-5-minutes.html</link>
  <pubDate>01 Apr 07 00:00</pubDate>
</item>
  </channel> 
</rss>