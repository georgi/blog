--- 
- !ruby/object:Shinmun::Comment 
  name: Matthias Georgi
  text: This **comment** was posted using the **system** described above.
  time: 2008-09-07 14:32:51 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Dan
  text: |-
    I don't usually like storing un-escaped information.
    
    Please don't work, please don't work...
  time: 2008-09-07 18:45:19 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Murphy's law officer
  text: |-
    <p>I know that you said "YAGNI", but writing comments to a single file is a very bad idea. At some point, there <em>will</em> be two PHP processes accessing the file at the same time. This can happen for a lot of reasons, including server overload, slow network connection or just pure Murphy's law.</p>
    
    <p>If you don't want to use a database, there is a better way. Put the comments into a separate folder (made when the first comment is received) and write each comment to a separate file. </p>
  time: 2008-09-07 19:14:58 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Matthias Georgi
  text: |-
    Thank you for pointng out, **Murphy's law officer** :)
    
    Each comment in its own file has some *problems*, too.
    
    How do I keep the **ordering** of records without concurrency problems?
    
    I have too maintain a *locking scheme* too, to assure that never two files will end up with the same name.
  time: 2008-09-07 20:10:16 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Murphy's law officer
  text: |-
    > How do I keep the ordering of records
    > without concurrency problems?
    
    Since this is a comment system, you should order it by the file date. If two comments are posted at the same time, it doesn't matter which comes first because they couldn't possible have read each other's comments.
  time: 2008-09-07 23:03:55 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Murphy's law officer
  text: |-
    > I have too maintain a locking scheme
    > too, to assure that never two files
    > will end up with the same name.
    
    PHP does this for you. Use the "tempnam". It will create a file with a unique filename. To have some additional safe guards, you can supply it with a prefix. Perhaps an MD5 sum of the comment text. But I doubt that this will be necessary
  time: 2008-09-07 23:07:15 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Murphy's law officer
  text: |-
    > > How do I keep the ordering of records
    > > without concurrency problems?
    > 
    > Since this is a comment system, you
    > should order it by the file date.
    
    This is not easy :-) I forgot that you may want to move the comments to a different server one day. The solution is simple. PHP's tempname-function accepts a prefix. Just use a timestamp as a prefix, and you can just order it by filename
  time: 2008-09-07 23:13:05 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Matthias Georgi
  text: |-
    I see, it is possible, but I like the idea of having one file for one article much better than to have maybe 100 files for one post.
    
    I think, using flock should suffice for this system.
  time: 2008-09-07 23:20:40 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Murphy's law officer
  text: |-
    This is not tested, so it probably contains errors :-)
    http://sprunge.us/TbZc?php
    
    Usage:
    
    The constructor takes one argument (the folder where the comments should be saved)
    
    saveComment() saves the comment to file
    
    outputComments() ouputs all comments in directory, sorted by date/name
  time: 2008-09-07 23:38:17 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Matthias Georgi
  text: |-
    Fine. I see, this is a nice approach and it is object oriented :)
    
    The comma thing is not needed, json records are seperated by newlines.
  time: 2008-09-08 01:25:53 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Stanley
  text: Is there any particular reason why you prefer this method over the standard database approach?
  time: 2008-09-08 01:36:24 +02:00
  website: http://www.stanleyshilov.com
- !ruby/object:Shinmun::Comment 
  name: Matthias Georgi
  text: |-
    Living without a database is just easier to manage. No database, no passwords, no server to maintain. 
    
    Having a database for just one comments table is sometimes overkill, expecially if you are paying for database accounts.
  time: 2008-09-08 01:44:00 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Harry
  text: |-
    Hi,very good code,as I kind of like static-fy website very much.
    
    just can't realy understand the meaning of "append one line of array,without reading the whole json file into the memory" this is really impressive. I 'm not familiar with php. do you mean the 
    fwrite($fp, $json);
    function can write a file without open it? 
    
    I realy like this kind of useful code.
  time: 2008-09-11 06:49:06 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Matthias Georgi
  text: |
    Hi Harry,
    
    the php function opens the file, but does not **parse** the contents. It just appends one line on a POST request.
    
    In the end of the script the whole file will be sent to the client **as it is**, again **without parsing** its contents.
    
    This should give a performance benefit for large json files as parsing 1000 lines of json certainly takes some time.

  time: 2008-09-11 21:40:29 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Hello
  text: HAve a try
  time: 2008-09-16 02:54:13 +02:00
  website: ""
- !ruby/object:Shinmun::Comment 
  name: Mourner
  text: Hi there, trying this out now. :)
  time: 2008-09-19 12:20:54 +02:00
  website: http://agafonkin.com
